{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lasha\\\\Desktop\\\\forecast\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport UilReact from \"@iconscout/react-unicons/icons/uil-react\";\nimport TopButtons from './components/TopButtons';\nimport Inputs from './components/Inputs';\nimport TimeAndLocation from './components/TimeAndLocation';\nimport TemperatureAndDetails from './components/TemperatureAndDetails';\nimport Forecast from './components/Forecast';\nimport getFormattedWeatherData from \"./services/weatherService\";\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [query, setQuery] = useState({\n    q: 'berlin'\n  });\n  const [units, setUnits] = useState('metric');\n  const [weather, setWeather] = useState(null);\n  useEffect(() => {\n    const fetchWeather = async () => {\n      await getFormattedWeatherData({\n        ...query,\n        units\n      }).then(data => {\n        setWeather(data);\n      });\n    };\n    fetchWeather();\n  }, [query, units]);\n  const formatBackground = () => {\n    if (!weather) return 'from-cyan-700 to-blue-700';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mx-auto max-w-screen-md mt-4 py-5 px-32 bg-gradient-to-br  h-fit shadow-xl shadow-gray-400\",\n    children: [/*#__PURE__*/_jsxDEV(TopButtons, {\n      setQuery: setQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Inputs, {\n      setQuery: setQuery,\n      units: units,\n      setUnits: setUnits\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TimeAndLocation, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TemperatureAndDetails, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n        title: \"hourly forecast\",\n        items: weather.hourly\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n        title: \"daily forecast\",\n        items: weather.daily\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"V37nWelZNAU0HOZi2IqUK5TBevc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["UilReact","TopButtons","Inputs","TimeAndLocation","TemperatureAndDetails","Forecast","getFormattedWeatherData","useEffect","useState","jsxDEV","_jsxDEV","App","_s","query","setQuery","q","units","setUnits","weather","setWeather","fetchWeather","then","data","formatBackground","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","items","hourly","daily","_c","$RefreshReg$"],"sources":["C:/Users/Lasha/Desktop/forecast/src/App.js"],"sourcesContent":["import './App.css';\nimport UilReact from \"@iconscout/react-unicons/icons/uil-react\"\nimport TopButtons from './components/TopButtons';\nimport Inputs from './components/Inputs';\nimport TimeAndLocation from './components/TimeAndLocation';\nimport TemperatureAndDetails from './components/TemperatureAndDetails';\nimport Forecast from './components/Forecast';\nimport getFormattedWeatherData from \"./services/weatherService\"\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n\n  const [query, setQuery] = useState({ q: 'berlin' })\n  const [units, setUnits] = useState('metric')\n  const [weather, setWeather] = useState(null)\n\n  useEffect(() => {\n    const fetchWeather = async () => {\n      await getFormattedWeatherData({ ...query, units }).then(\n        (data) => {\n          setWeather(data);\n        });\n    };\n\n    fetchWeather()\n  }, [query, units])\n\n  const formatBackground = () => {\n    if (!weather) return 'from-cyan-700 to-blue-700'\n  }\n\n  return (\n    <div\n      className='mx-auto max-w-screen-md mt-4 py-5 px-32 bg-gradient-to-br  h-fit shadow-xl shadow-gray-400'>\n      <TopButtons setQuery={setQuery} />\n      <Inputs setQuery={setQuery} units={units} setUnits={setUnits} />\n\n      {weather && (\n        <div>\n          <TimeAndLocation weather={weather} />\n          <TemperatureAndDetails weather={weather} />\n\n          <Forecast title=\"hourly forecast\" items={weather.hourly} />\n          <Forecast title=\"daily forecast\" items={weather.daily} />\n        </div>\n      )}\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,QAAQ,MAAM,0CAA0C;AAC/D,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,qBAAqB,MAAM,oCAAoC;AACtE,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,uBAAuB,MAAM,2BAA2B;AAC/D,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC;IAAEO,CAAC,EAAE;EAAS,CAAC,CAAC;EACnD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,QAAQ,CAAC;EAC5C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMa,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMd,uBAAuB,CAAC;QAAE,GAAGO,KAAK;QAAEG;MAAM,CAAC,CAAC,CAACK,IAAI,CACpDC,IAAI,IAAK;QACRH,UAAU,CAACG,IAAI,CAAC;MAClB,CAAC,CAAC;IACN,CAAC;IAEDF,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACP,KAAK,EAAEG,KAAK,CAAC,CAAC;EAElB,MAAMO,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAI,CAACL,OAAO,EAAE,OAAO,2BAA2B;EAClD,CAAC;EAED,oBACER,OAAA;IACEc,SAAS,EAAC,4FAA4F;IAAAC,QAAA,gBACtGf,OAAA,CAACT,UAAU;MAACa,QAAQ,EAAEA;IAAS;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClCnB,OAAA,CAACR,MAAM;MAACY,QAAQ,EAAEA,QAAS;MAACE,KAAK,EAAEA,KAAM;MAACC,QAAQ,EAAEA;IAAS;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAE/DX,OAAO,iBACNR,OAAA;MAAAe,QAAA,gBACEf,OAAA,CAACP,eAAe;QAACe,OAAO,EAAEA;MAAQ;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrCnB,OAAA,CAACN,qBAAqB;QAACc,OAAO,EAAEA;MAAQ;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAE3CnB,OAAA,CAACL,QAAQ;QAACyB,KAAK,EAAC,iBAAiB;QAACC,KAAK,EAAEb,OAAO,CAACc;MAAO;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3DnB,OAAA,CAACL,QAAQ;QAACyB,KAAK,EAAC,gBAAgB;QAACC,KAAK,EAAEb,OAAO,CAACe;MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIE,CAAC;AAEV;AAACjB,EAAA,CAzCQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}